package dataStructure.arrayAndMatrix;

/**
 * 圆圈中最后剩下的数
 * 小朋友n个人，围成一个圈，从0开始报数到m-1，报到m-1出列，返回最后一个留下的人编号（小朋友编号是0到n-1），如果没有这个小朋友返回-1
 */
public class LastRemaining {
    public int solution(int n,int m){//n是小朋友的个数，m是报号数
        //先判断特殊情况
        if(n<1||m<1){
            return -1;
        }
        //环形结构，所有小朋友的位置，用数组实现环型结构，即遍历时当i遍历到尾指针时重新置0
        //当前的报号情况，用step记录
        //圈内小朋友剩余个数，用count统计
        int[] array = new int[n];//用等大数组来记录小朋友的队伍
        int i = -1;//保证第一个小朋友是0，(-1)++就是0了；代表小朋友数组的下标
        int step = 0;//与m相关，记录每次数数的；因为这里使用置-1表示小朋友出圈，故需要用一个单独的变量来记录每次的报号情况
        int count = n;//表示当前圈内小朋友的剩余个数
        while(count>0){//当count=0时，跳出循环，此时的i就是最后一个小朋友
            i++;//指向上一个被删除对象的下一个元素；每进行一个循环，i++
            if(i>=n) i=0;//保证环型结构
            if(array[i] == -1) continue; //当当前i是已出群的小朋友，跳过此次循环
            step++;//报号+1；且报号是[1,m]，与[0,m-1]相等
            if(step==m) {//当报号是m时，对当前i小朋友进行操作
                array[i]=-1;//对已唱过歌出圈的小朋友进行置-1操作，作为标识//这里选择对已经出圈的小朋友置-1的方式标示，因为数组也不方便删除
                step = 0;//报号号码重新置0
                count--;//圈内小朋友-1
            }
        }
        return i;
    }
}
