package algorithm.dynamicProgrammingDP.gitHub200.fibonacci;

/**
 * 母牛生产
 * 题目：假设农场中成熟的母牛每年都会生1头母牛，并且永不会死... 第一年有个1只小母牛，从第二年开始，母牛开始生小母牛。
 *      每只小母牛3年之后成熟又可以生小母牛。给定整数N，求N年后牛的数量。
 * 思路：动态规划，求解子问题
 *      dp[0] = 1（大）
 *      dp[1] = 1（大）
 *      dp[2] = 2（大、小）
 *      dp[3] = 3（大、小、小）
 *      dp[4] = 4（大、小、小、小）
 *      dp[5] = 6（大、大、小、小、小、小）
 *      dp[i]表示第i年的牛数量
 *      dp[i] = dp[i-1] + dp[i-3]
 *      其中，dp[i-1]为上一年的牛数量
 *           dp[i-3]为三年前的牛数量，而其中的小牛此时全部都变成大牛了，故三年前的牛总数就是第i年可生产牛的数量，即第i年新增小牛的数量
 */
public class CowProduction {
}
